(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{DhEd:function(n,e,t){"use strict";t.r(e),t.d(e,"_frontmatter",(function(){return c})),t.d(e,"default",(function(){return p}));var i=t("Fcif"),o=t("+I+c"),r=(t("mXGw"),t("/FXl")),s=t("TjRS"),a=t("+8zC"),d=t("Lbbh"),l=t.n(d),c=(t("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/integrations/amplitude-integration.mdx"}});var u={_frontmatter:c},m=s.a;function p(n){var e=n.components,t=Object(o.a)(n,["components"]);return Object(r.b)(m,Object(i.a)({},u,t,{components:e,mdxType:"MDXLayout"}),Object(r.b)(a.k,{mdxType:"Title"},"Amplitude integration"),Object(r.b)(a.j,{visibleOn:"android,ios",mdxType:"TextBlock"},"\n## Automatic integration\nSmartlook can be automatically integrated into Amplitude using the following:\n"),Object(r.b)(a.c,{kind:"example",snippets:{android:{java:'\nAmplitudeClient amplitudeInstance = Amplitude.getInstance().initialize(this, "YOUR_API_KEY");\n...\nSmartlook.enableIntegration(new AmplitudeIntegration(amplitudeInstance));\n      ',kotlin:'\nval amplitudeInstance = Amplitude.getInstance().initialize(this, "YOUR_API_KEY")\n...\nSmartlook.enableIntegration(AmplitudeIntegration(amplitudeInstance))\n      '},ios:{swift:'\nAmplitude.instance()?.initializeApiKey("YOUR_AMPLITUDE_API_KEY")\n\nlet smartlookConfiguration = Smartlook.Configuration.configuration(key: "YOUR_SMARTLOOK_API_KEY")\nsmartlookConfiguration.enableIntegrations = [ Smartlook.AmplitudeIntegration(integrationWith: Amplitude.instance()) ]\n    \nSmartlook.setupAndStartRecording(configuration: smartlookConfiguration)\n',"objective-c":'\n[[Amplitude instance] initializeApiKey:@"YOUR_AMPLITUDE_API_KEY"];\n\nSLSetupConfiguration *configuration = [SLSetupConfiguration configurationWithKey:@"YOUR_SMARTLOOK_API_KEY"];\nconfiguration.enableIntegrations = @[ [[SLAmplitudeIntegration alloc] initIntegrationWith:[Amplitude instance]] ];\n\n[Smartlook setupAndStartRecordingWithConfiguration:configuration];\n'}},mdxType:"CodeBlock"}),Object(r.b)(a.j,{visibleOn:"android,ios",mdxType:"TextBlock"},"\nThe Smartlook visitor URL will be added as a new property called the `Smartlook visitor dashboard URL` into a Amplitude user.\n"),Object(r.b)("img",{visibleOn:"android,ios",src:l.a}),Object(r.b)("h2",{id:"manual-integration"},"Manual integration"),Object(r.b)(a.j,{kind:"important",visibleOn:"xamarin",mdxType:"TextBlock"},'\nThere seems to be no official Xamarin integration of Aplitude. In the case of custom integration, this <Link to="/api_reference/#integrations">API Reference documentation</Link> applies.\n'),Object(r.b)(a.j,{invisibleOn:"ios,xamarin",mdxType:"TextBlock"},"Smartlook can be easily integrated into Amplitude using `IntegrationListener`:"),Object(r.b)(a.j,{visibleOn:"ios",mdxType:"TextBlock"},"Smartlook can be easily integrated into Amplitude using `Notifications`:"),Object(r.b)(a.c,{kind:"example",snippets:{android:{java:'\nSmartlook.registerIntegrationListener(new IntegrationListener() {\n    @Override\n    public void onSessionReady(@NotNull String dashboardSessionUrl) {\n        JSONObject eventProperties = new JSONObject();\n        try {\n            eventProperties.put("Session url", dashboardSessionUrl);\n        } catch (JSONException exception) {\n        }\n        Amplitude.getInstance().logEvent("Smartlook session URL", eventProperties);\n    }\n\n    @Override\n    public void onVisitorReady(@NotNull String dashboardVisitorUrl) {\n        Identify identify = new Indetify();\n        identify.set("Smartlook visitor URL", dashboardVisitorUrl);\n        Amplitude.getInstance().identify(identify);\n    }\n});\n      ',kotlin:'\nSmartlook.registerIntegrationListener(object : IntegrationListener {\n    override fun onSessionReady(dashboardSessionUrl: String) {\n        val eventProperties = JSONObject()\n        try {\n            eventProperties.put("Session url", dashboardSessionUrl)\n        } catch (JSONException exception) {\n        }\n        Amplitude.getInstance().logEvent("Smartlook session URL", eventProperties)\n    }\n\n    override fun onVisitorReady(dashboardVisitorUrl: String) {\n        Identify identify = Indetify()\n        identify.set("Smartlook visitor URL", dashboardVisitorUrl)\n        Amplitude.getInstance().identify(identify)\n    }\n})\n      '},cocos:{java:'\nSmartlook.registerIntegrationListener(new IntegrationListener() {\n    @Override\n    public void onSessionReady(@NotNull String dashboardSessionUrl) {\n        JSONObject eventProperties = new JSONObject();\n        try {\n            eventProperties.put("Session url", dashboardSessionUrl);\n        } catch (JSONException exception) {\n        }\n        Amplitude.getInstance().logEvent("Smartlook session URL", eventProperties);\n    }\n\n    @Override\n    public void onVisitorReady(@NotNull String dashboardVisitorUrl) {\n        Identify identify = new Indetify();\n        identify.set("Smartlook visitor URL", dashboardVisitorUrl);\n        Amplitude.getInstance().identify(identify);\n    }\n});\n      ',kotlin:'\nSmartlook.registerIntegrationListener(object : IntegrationListener {\n    override fun onSessionReady(dashboardSessionUrl: String) {\n        val eventProperties = JSONObject()\n        try {\n            eventProperties.put("Session url", dashboardSessionUrl)\n        } catch (JSONException exception) {\n        }\n        Amplitude.getInstance().logEvent("Smartlook session URL", eventProperties)\n    }\n\n    override fun onVisitorReady(dashboardVisitorUrl: String) {\n        Identify identify = Indetify()\n        identify.set("Smartlook visitor URL", dashboardVisitorUrl)\n        Amplitude.getInstance().identify(identify)\n    }\n})\n      '},cordova:{javascript:'\nSmartlook.registerIntegrationListener({\n  onSessionReady: function (dashboardSessionUrl) {\n    amplitudeClient.logEvent(\n        "Smartlook session URL",\n        {"session_url": dashboardSessionUrl});\n  },\n  onVisitorReady: function (dashboardVisitorUrl) {\n    var identify = new amplitude.Identify().set("smartlook_visitor_url", dashboardVisitorUrl);\n    amplitude.identify(identify);\n  }\n});\n      '},ionic:{typescript:'\nsmartlook.registerIntegrationListener(new SmartlookIntegrationListener(\n  function (dashboardSessionUrl) {\n    amplitudeClient.logEvent(\n        "Smartlook session URL",\n        {"session_url": dashboardSessionUrl})\n  },\n  function (dashboardVisitorUrl) {\n    var identify = new amplitude.Identify().set("smartlook_visitor_url", dashboardVisitorUrl)\n    amplitude.identify(identify)\n  }\n));\n      '},ios:{swift:'\nNotificationCenter.default.addObserver(forName: Smartlook.dashboardSessionURLChanged, object: nil, queue: nil) { (note) in\n  if let currentSessionUrl = Smartlook.getDashboardSessionURL(withCurrentTimestamp: false) {\n    Amplitude.instance()?.logEvent("Smartlook session URL", withEventProperties: [ "session_url" : currentSessionUrl]);\n  }\n};\n\nNotificationCenter.default.addObserver(forName: Smartlook.dashboardVisitorURLChanged, object: nil, queue: nil) { (note) in\n  if let currentVisitorUrlString = Smartlook.getDashboardVisitorURL()?.absoluteString {\n    let identify = AMPIdentify().add("smartlook_visitor_url", value: currentVisitorUrlString as NSString)\n    Amplitude.instance()?.identify(identify)\n  }\n};\n      ',"objective-c":'\n[[NSNotificationCenter defaultCenter] addObserverForName:SLDashboardSessionURLChangedNotification object:nil queue:nil usingBlock:^(NSNotification * _Nonnull note) {\n  NSURL *currentSessionURL = [Smartlook getDashboardSessionURLWithCurrentTimestamp:NO];\n  if (currentSessionURL != nil) {\n      [[Amplitude instance] logEvent:@"Smartlook session URL" withEventProperties:@{ @"session_url" : currentSessionURL}];\n  }\n}];\n\n[[NSNotificationCenter defaultCenter] addObserverForName:SLDashboardVisitorURLChangedNotification object:nil queue:nil usingBlock:^(NSNotification * _Nonnull note) {\n  NSURL *currentVisitorURL = [Smartlook getDashboardVisitorURL];\n  if (currentVisitorURL != nil) {\n    AMPIdentify *identify = [[AMPIdentify identify] add:@"smartlook_visitor_url" value:currentVisitorURL];\n    [[Amplitude instance] identify:identify];\n  }\n}];\n'},flutter:{dart:"\nclass CustomIntegrationListener implements IntegrationListener {\n  void onSessionReady(String dashboardSessionUrl) {\n    analytics.logEvent('Smartlook session URL', eventProperties: {\n      'session_url': dashboardSessionUrl\n    });\n  }\n\n\n  void onVisitorReady(String dashboardVisitorUrl) {\n    final Identify identify = Identify()\n      ..set('smartlook_visitor_url', dashboardVisitorUrl)\n\n    analytics.identify(identify);\n  }\n}\n\n\nSmartlook.registerIntegrationListener(new CustomIntegrationListener());\n      "},unity:{csharp:'\npublic class IntegrationListener : SmartlookUnity.IntegrationListener\n{\n    public override void onSessionReady(string dashboardSessionUrl)\n    {\n      Dictionary<string, object> options = new Dictionary<string, object>() {\n        {"dashboardSessionUrl" , dashboardSessionUrl }\n      };\n      Amplitude.Instance.logEvent("Smartlook session URL", options);\n    }\n\n\n    public override void onVisitorReady(string dashboardVisitorUrl)\n    {\n      Dictionary<string, object> userProperties = new Dictionary<string, object>() {\n        {"dashboardVisitorUrl", dashboardVisitorUrl}\n      };\n      Amplitude.Instance.setUserProperties(userProperties);\n    }\n}\n\n\nSmartlookUnity.Smartlook.RegisterIntegrationListener(new IntegrationListener());\n'},react:{javascript:'\nSmartlook.registerIntegrationListener({\n  onSessionReady: function (dashboardSessionUrl) {\n    amplitude.logEvent(\n        "Smartlook session URL",\n        {"session_url": dashboardSessionUrl});\n);\n  },\n  onVisitorReady: function (dashboardVisitorUrl) {\n    var identify = new amplitude.Identify().set("smartlook_visitor_url", dashboardVisitorUrl);\n    amplitude.identify(identify);\n  }\n});\n      '}},mdxType:"CodeBlock"}),Object(r.b)(a.j,{kind:"note",visibleOn:"android",mdxType:"TextBlock"},"\nFull Amplitude documentation with examples can be found on the [official website](https://developers.amplitude.com/docs/android).\n"),Object(r.b)(a.j,{kind:"note",visibleOn:"unity",mdxType:"TextBlock"},"\nFull Amplitude documentation with examples can be found on the [official website](https://developers.amplitude.com/docs/unity).\n"),Object(r.b)(a.j,{kind:"note",visibleOn:"ios",mdxType:"TextBlock"},"\nFull Amplitude documentation with examples can be found on the [official website](https://developers.amplitude.com/docs/ios).\n"),Object(r.b)(a.j,{kind:"note",visibleOn:"cocos",mdxType:"TextBlock"},"\nFull Amplitude documentation with examples can be found on the [official website](https://developers.amplitude.com/docs/android).\n"),Object(r.b)(a.j,{kind:"note",visibleOn:"react",mdxType:"TextBlock"},"\nFull Amplitude documentation with examples can be found on the [official website](https://developers.amplitude.com/docs/react-native-setup).\n"),Object(r.b)(a.j,{kind:"note",visibleOn:"flutter",mdxType:"TextBlock"},"\nFull Amplitude documentation with examples can be found on the [official website](https://developers.amplitude.com/docs/flutter-setup).\n"),Object(r.b)(a.j,{kind:"note",visibleOn:"cordova,ionic",mdxType:"TextBlock"},"\nFull Amplitude documentation with examples can be found on the [official website](https://developers.amplitude.com/docs/javascript).\n"))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/integrations/amplitude-integration.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-integrations-amplitude-integration-mdx-8ac52ca96abd3bd71491.js.map