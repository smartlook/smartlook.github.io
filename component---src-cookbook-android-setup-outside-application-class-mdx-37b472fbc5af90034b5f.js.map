{"version":3,"sources":["webpack:///../src/cookbook/android_setup_outside_application_class.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","kind","invisibleOn","parentName","snippets","java","kotlin","isMDXComponent"],"mappings":"iSASaA,EAAe,Q,0OAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAWC,KAAK,YAAYC,YAAY,UAAUF,QAAQ,aAA1D,uDAGA,YAAC,IAAD,CAAOA,QAAQ,SAAf,0CACA,0NACA,kGAAiF,0BAAYG,WAAW,KAAvB,YAAjF,0EACA,YAAC,IAAD,CAAMC,SAAU,CACdC,KAAM,kXAWNC,OAAQ,wTAUPN,QAAQ,e,wOAKfH,EAAWU,gBAAiB","file":"component---src-cookbook-android-setup-outside-application-class-mdx-37b472fbc5af90034b5f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/smartlook.github.io/smartlook.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, Title, TextBlock } from 'components';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <TextBlock kind=\"important\" invisibleOn=\"android\" mdxType=\"TextBlock\">{`\nThis guide is focused on Android (Java/Kotlin).\n`}</TextBlock>\n    <Title mdxType=\"Title\">SDK setup outside an Application class</Title>\n    <p>{`Sometimes it is not possible to initialize SDK at the start of the application. A typical example is when you need to fetch your api key so you don't have your api key at the application start.`}</p>\n    <p>{`If this is the case you will need to provide the SDK setup with an actual `}<inlineCode parentName=\"p\">{`Activity`}</inlineCode>{` reference so the SDK can “catch up” with the application’s lifecycle.`}</p>\n    <Code snippets={{\n      java: `\npublic class MainActivity extends AppCompatActivity {\\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate();\\n\n        Smartlook.SetupOptionsBuilder builder = new Smartlook.SetupOptionsBuilder(YOUR_API_KEY)\n                .setActivity(this);\\n\n        Smartlook.setupAndStartRecording(builder.build());\n    }\n}\n`,\n      kotlin: `\nclass MainActivity : AppCompatActivity() {\\n\n    override fun onCreate(savedInstanceState: Bundle) {\n        super.onCreate();\\n\n        val builder = Smartlook.SetupOptionsBuilder(YOUR_API_KEY)\n                .setActivity(this)\\n\n        Smartlook.setupAndStartRecording(builder.build())\n    }\n}\n`\n    }} mdxType=\"Code\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}