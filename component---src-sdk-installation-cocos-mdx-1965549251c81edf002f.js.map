{"version":3,"sources":["webpack:///../src/sdk-installation/cocos.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","kind","snippets","gradle","java","kotlin","ruby","swift","isMDXComponent"],"mappings":"oQAUaA,G,oBAAe,S,gNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAOA,QAAQ,SAAf,0BACA,kBACE,GAAM,WADR,WAGA,sBACE,kBAAIC,WAAW,MAAf,yBAA8C,sBAAQA,WAAW,MAAnB,SAA9C,IAA6F,0BAAYA,WAAW,MAAvB,gBAA7F,MAEF,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BC,OAAQ,gEAGPJ,QAAQ,SACX,kBACE,MAAS,GAET,kBAAIC,WAAW,MAAf,0CAA+D,sBAAQA,WAAW,MAAnB,YAA/D,IAAiH,0BAAYA,WAAW,MAAvB,gBAAjH,MAEF,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BC,OAAQ,0HASPJ,QAAQ,SACX,uDAAsC,sBAAQC,WAAW,KAAnB,cAAtC,YAAiG,sBAAQA,WAAW,KAAnB,eAAjG,WACA,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BE,KAAM,uOAUNC,OAAQ,8MASPN,QAAQ,SACX,YAAC,IAAD,CAAWE,KAAK,YAAYF,QAAQ,aAApC,8MAKA,kBACE,MAAS,GAET,kBAAIC,WAAW,MAAf,6EAAkG,iBAAGA,WAAW,KAC5G,KAAQ,8BADsF,oBAAlG,cAIF,YAAC,IAAD,CAAWC,KAAK,YAAYF,QAAQ,aAApC,yUAKA,kBACE,GAAM,OADR,OAGA,sBACE,kBAAIC,WAAW,MAAf,wBAA6C,sBAAQA,WAAW,MAAnB,aAA7C,kEAA8J,0BAAYA,WAAW,MAAvB,WAA9J,MAEF,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BI,KAAM,qBAGLP,QAAQ,SACX,mFAAkE,sBAAQC,WAAW,KAAnB,eAAlE,eAAiI,iBAAGA,WAAW,IAC3I,KAAQ,kEADqH,qBAAjI,oCAEmE,0BAAYA,WAAW,KAAvB,uBAFnE,0BAGA,kBACE,MAAS,GAET,kBAAIA,WAAW,MAAf,MAA2B,sBAAQA,WAAW,MAAnB,SAA3B,QAA8E,sBAAQA,WAAW,MAAnB,SAA9E,kFAA2M,0BAAYA,WAAW,MAAvB,eAA3M,YAAgR,0BAAYA,WAAW,MAAvB,sBAAhR,MAEF,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BK,MAAO,uSAOP,yTAOCR,QAAQ,SACX,YAAC,IAAD,CAAWE,KAAK,YAAYF,QAAQ,aAApC,8WAMA,kBACE,MAAS,GAET,kBAAIC,WAAW,MAAf,6EAAkG,iBAAGA,WAAW,KAC5G,KAAQ,8BADsF,oBAAlG,cAIF,YAAC,IAAD,CAAWC,KAAK,YAAYF,QAAQ,aAApC,yUAKA,kBACE,GAAM,sBADR,sBAGA,sCAAqB,sBAAQC,WAAW,KAAnB,WAArB,iCAAkG,sBAAQA,WAAW,KAAnB,uBAAlG,aAAuK,sBAAQA,WAAW,KAAnB,sCAAvK,+EAA6T,sBAAQA,WAAW,KAAnB,WAA7T,6BAAsY,sBAAQA,WAAW,KAAnB,MAAtY,KACA,kBACE,GAAM,iBADR,iBAGA,YAAC,IAAD,CAAWD,QAAQ,aAAnB,mlD,8MAqBJH,EAAWY,gBAAiB","file":"component---src-sdk-installation-cocos-mdx-1965549251c81edf002f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/smartlook.github.io/smartlook.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, CodeBlock, TextBlock, Link, Title } from \"components\";\nimport { usePlatforms } from 'hooks';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Title mdxType=\"Title\">Cocos SDK Installation</Title>\n    <h2 {...{\n      \"id\": \"android\"\n    }}>{`Android`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`Add Smartlook in your `}<strong parentName=\"li\">{`appâ€™s`}</strong>{` `}<inlineCode parentName=\"li\">{`build.gradle`}</inlineCode>{`:`}</li>\n    </ol>\n    <Code kind=\"example\" snippets={{\n      gradle: `\nimplementation 'com.smartlook.recording:app:1.6.2-cocos'\n`\n    }} mdxType=\"Code\" />\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Add Smartlook Maven repository in your `}<strong parentName=\"li\">{`projects`}</strong>{` `}<inlineCode parentName=\"li\">{`build.gradle`}</inlineCode>{`:`}</li>\n    </ol>\n    <Code kind=\"example\" snippets={{\n      gradle: `\nallprojects {\n  repositories {\n    maven {\n      url \"https://sdk.smartlook.com/android/release\"\n    }\n  }\n}\n`\n    }} mdxType=\"Code\" />\n    <p>{`3.Setup and start Smartlook in `}<strong parentName=\"p\">{`onCreate()`}</strong>{` of your `}<strong parentName=\"p\">{`Application`}</strong>{` class:`}</p>\n    <Code kind=\"example\" snippets={{\n      java: `\npublic class AppActivity extends Cocos2dxActivity {\n    @Override\n    public void onCreate() {\n        ...\n        // DO OTHER INITIALIZATION BELOW\n        Smartlook.setupAndStartRecording(YOUR_API_KEY);\n    }\n}\n      `,\n      kotlin: `\nclass AppActivity : Cocos2dxActivity() {\n    override fun onCreate() {\n        ...\n        // DO OTHER INITIALIZATION BELOW\n        Smartlook.setupAndStartRecording(YOUR_API_KEY)\n    }\n}\n      `\n    }} mdxType=\"Code\" />\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nTo setup Smartlook, the **unique project API key **is needed. It can be found in the mobile project settings in the <Link to=\"https://app.smartlook.com/settings/projects\">Smartlook Dashboard</Link>.\n`}\n    </TextBlock>\n    <ol {...{\n      \"start\": 4\n    }}>\n      <li parentName=\"ol\">{`Smartlook now starts recording the app. The recordings will appear in the `}<a parentName=\"li\" {...{\n          \"href\": \"https://app.smartlook.com/\"\n        }}>{`Smartlook player`}</a>{` shortly.`}</li>\n    </ol>\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nSDK will upload sessions **only on Wi-Fi**. When uploading on mobile connections is requested, it must be enabled in the project settings in the dashboard. More details about the recording process can be found in the <Link to=\"/docs/sdk/conceptual/when-the-recordings-appear-in-dashboard\">Conceptual documentation</Link>.\n`}\n    </TextBlock>\n    <h2 {...{\n      \"id\": \"ios\"\n    }}>{`iOS`}</h2>\n    <ol>\n      <li parentName=\"ol\">{`In projects that use `}<strong parentName=\"li\">{`Cocoapods`}</strong>{`, Smartlook can be installed by adding the respective pod into `}<inlineCode parentName=\"li\">{`Podfile`}</inlineCode>{`:`}</li>\n    </ol>\n    <Code kind=\"example\" snippets={{\n      ruby: `\npod Smartlook\n`\n    }} mdxType=\"Code\" />\n    <p>{`Smartlook can be also added directly to the app project by `}<strong parentName=\"p\">{`downloading`}</strong>{` the latest `}<a parentName=\"p\" {...{\n        \"href\": \"https://sdk.smartlook.com/ios/smartlook-ios-sdk-1.5.0.2607.zip\"\n      }}>{`Smartlook iOS SDK`}</a>{`, unzipping the file, and adding `}<inlineCode parentName=\"p\">{`Smartlook.framework`}</inlineCode>{` to the Xcode project.`}</p>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`To `}<strong parentName=\"li\">{`setup`}</strong>{` and `}<strong parentName=\"li\">{`start`}</strong>{` recording with Smartlook, Smartlook must be imported, and configured e.g., in `}<inlineCode parentName=\"li\">{`AppDelegate`}</inlineCode>{` and its `}<inlineCode parentName=\"li\">{`didFinishLaunching`}</inlineCode>{`:`}</li>\n    </ol>\n    <Code kind=\"example\" snippets={{\n      swift: `\nimport Smartlook\n...\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\\n\n    Smartlook.setup(key: \"YOUR_API_KEY\", options: [.useAdaptiveFramerate: false]))\n    Smartlook.startRecording()\n      `,\n      'objective-c': `\n#import <Smartlook/Smartlook.h>\n...\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\\n\n    [Smartlook setupWithKey: @\"YOUR_API_KEY\" options:@{SLSetupOptionUseAdaptiveFramerateKey: @NO }];\n    [Smartlook startRecording];\n      `\n    }} mdxType=\"Code\" />\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nTo setup Smartlook, the **unique project API key** is needed. It can be found in the mobile project settings in the <Link to=\"https://app.smartlook.com/settings/projects\">Smartlook Dashboard</Link>.\\n\nTo understand the *adaptive framework* option see <Link to=\"/docs/sdk/conceptual/screen-recording-quality\" platform=\"cocos\">Smartlook API reference</Link>. \n`}\n    </TextBlock>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Smartlook now starts recording the app. The recordings will appear in the `}<a parentName=\"li\" {...{\n          \"href\": \"https://app.smartlook.com/\"\n        }}>{`Smartlook player`}</a>{` shortly.`}</li>\n    </ol>\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nSDK will upload sessions **only on Wi-Fi**. When uploading on mobile connections is requested, it must be enabled in the project settings in the dashboard. More details about the recording process can be found in the <Link to=\"/docs/sdk/conceptual/when-the-recordings-appear-in-dashboard\">Conceptual documentation</Link>.\n`}\n    </TextBlock>\n    <h1 {...{\n      \"id\": \"supported-versions\"\n    }}>{`Supported versions`}</h1>\n    <p>{`Currently the `}<strong parentName=\"p\">{`minimal`}</strong>{` supported Android version is `}<strong parentName=\"p\">{`Jelly Bean (API 18)`}</strong>{`, however `}<strong parentName=\"p\">{`video is recorded only for API 24+`}</strong>{`, analytics events and other functionalities are not limited. Currently the `}<strong parentName=\"p\">{`minimal`}</strong>{` supported iOS version is `}<strong parentName=\"p\">{`10`}</strong>{`.`}</p>\n    <h1 {...{\n      \"id\": \"further-steps\"\n    }}>{`Further Steps`}</h1>\n    <TextBlock mdxType=\"TextBlock\">{`\nAll Smartlook SDK methods are documented in the <Link to=\"/docs/sdk/api-reference\" platform=\"cocos\">Smartlook API reference</Link>.\n\\n\nSome **advanced use-case** and **troubleshooting** case-studies are described in the Cookbooks section of this documentation.\n\\n\n**Issues and bugs** can be reported in the <Link to=\"https://github.com/smartlook/smartlook-mobile-issue-tracker\">issue tracker</Link>.\n\\n\n**Concepts** underlying the Smartlook functionality are described in the Conceptual documentation:\n* <Link to=\"/docs/sdk/conceptual/setup-and-start-recording\" platform=\"android\">Setup & Start Recording</Link>\n* <Link to=\"/docs/sdk/conceptual/when-the-recordings-appear-in-dashboard\" platform=\"android\">How are the data recorded and uploaded to be visible in the player and dashboard?</Link>\n* <Link to=\"/docs/sdk/conceptual/life-cycle-session-user\" platform=\"android\">Smartlook Life Cycle in the App, Session, User</Link>\n* <Link to=\"/docs/sdk/conceptual/what-and-how-is-recorded\" platform=\"android\">What is recorded by Smartlook, and how?</Link>\n* <Link to=\"/docs/sdk/conceptual/handling-sensitive-data\" platform=\"android\">Handling Sensitive Data</Link>\n* <Link to=\"/docs/sdk/conceptual/screen-recording-quality\" platform=\"android\">Screen Recording Quality</Link>\n* Tracking <Link to=\"/docs/sdk/conceptual/event-tracking\" platform=\"android\">Events</Link> and <Link to=\"/docs/sdk/conceptual/recording-navigation\" platform=\"android\">Navigation</Link> in the App\n* <Link to=\"/docs/sdk/conceptual/integrating-with-other-tools\" platform=\"android\">Smartlook integration with other tools</Link>\n`}</TextBlock>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}