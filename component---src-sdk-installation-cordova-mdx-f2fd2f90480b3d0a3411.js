(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{Ouxm:function(e,t,o){"use strict";o.r(t),o.d(t,"_frontmatter",(function(){return c})),o.d(t,"default",(function(){return m}));var n=o("Fcif"),a=o("+I+c"),i=(o("mXGw"),o("/FXl")),r=o("TjRS"),d=o("+8zC"),s=(o("aD51"),["components"]),c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/sdk-installation/cordova.mdx"}});var l={_frontmatter:c},p=r.a;function m(e){var t=e.components,o=Object(a.a)(e,s);return Object(i.b)(p,Object(n.a)({},l,o,{components:t,mdxType:"MDXLayout"}),Object(i.b)(d.l,{mdxType:"Title"},"Cordova SDK Installation"),Object(i.b)(d.k,{kind:"note",mdxType:"TextBlock"},"In the version `1.8.0` we have added TypeScript typings."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Add Cordova plugin to your project using this command:")),Object(i.b)(d.b,{kind:"example",snippets:{cli:"\ncordova plugin add cordova-plugin-smartlook\n"},mdxType:"Code"}),Object(i.b)("ol",{start:2},Object(i.b)("li",{parentName:"ol"},"Setup and start Smartlook on ",Object(i.b)("a",{parentName:"li",href:"https://cordova.apache.org/docs/en/5.1.1/cordova/events/events.deviceready.html"},"deviceready")," callback:")),Object(i.b)(d.b,{kind:"example",snippets:{javascript:'\nif(document.readyState === "complete") {\n  document.addEventListener("deviceready", onDeviceReady, false);\n}\n\nfunction onDeviceReady() {\n    Smartlook.setupAndStartRecording({smartlookAPIKey: "YOUR_API_KEY"});\n}\n      '},mdxType:"Code"}),Object(i.b)(d.k,{kind:"important",mdxType:"TextBlock"},'\nTo setup Smartlook, the **unique project API key **is needed. It can be found in the mobile project settings in the <Link to="https://app.smartlook.com/settings/projects">Smartlook Dashboard</Link>.\n'),Object(i.b)("ol",{start:3},Object(i.b)("li",{parentName:"ol"},"Smartlook now starts recording the app. The recordings will appear in the ",Object(i.b)("a",{parentName:"li",href:"https://app.smartlook.com/"},"Smartlook player")," shortly.")),Object(i.b)(d.k,{kind:"important",mdxType:"TextBlock"},'\nSDK will upload sessions **only on Wi-Fi**. When uploading on mobile connections is requested, it must be enabled in the project settings in the dashboard. More details about the recording process can be found in the <Link to="/docs/sdk/conceptual/when-the-recordings-appear-in-dashboard">Conceptual documentation</Link>.\n'),Object(i.b)("ol",{start:4},Object(i.b)("li",{parentName:"ol"},"To access the typescript types you will need to explicitly set the type folder roots. Add this to your project's tsconfig.json.:")),Object(i.b)(d.b,{kind:"example",snippets:{json:'\n"typeRoots": ["./node_modules/@types", "./node_modules/cordova-plugin-smartlook/globalTypes"]\n'},mdxType:"Code"}),Object(i.b)("p",null,"So the whole file will look for example like.:"),Object(i.b)(d.b,{kind:"example",snippets:{json:'\n{\n\t"compilerOptions": {\n\t\t"target": "es5",\n\t\t"module": "commonjs",\n\t\t"sourceMap": true,\n\t\t"typeRoots": ["./node_modules/@types", "./node_modules/cordova-plugin-smartlook/globalTypes"],\n\t\t"skipLibCheck": true,\n\t\t"esModuleInterop": true,\n\t\t"moduleResolution": "node"\n\t},\n\t"include": ["src/js"]\n}\n'},mdxType:"Code"}),Object(i.b)("h1",{id:"supported-versions"},"Supported versions"),Object(i.b)("p",null,"Currently the ",Object(i.b)("strong",{parentName:"p"},"minimal")," supported version is ",Object(i.b)("strong",{parentName:"p"},"Jelly Bean (API 18)")," for Android and ",Object(i.b)("strong",{parentName:"p"},"10")," for iOS."),Object(i.b)("h1",{id:"further-steps"},"Further Steps"),Object(i.b)(d.k,{mdxType:"TextBlock"},'\nAll Smartlook SDK methods are documented in the <Link to="/docs/sdk/api-reference" platform="cordova">Smartlook API reference</Link>.\n\n\nSome **advanced use-case** and **troubleshooting** case-studies are described in the Cookbooks section of this documentation.\n\n\n**Issues and bugs** can be reported in the <Link to="https://github.com/smartlook/smartlook-mobile-issue-tracker">issue tracker</Link>.\n\n\n**Concepts** underlying the Smartlook functionality are described in the Conceptual documentation:\n* <Link to="/docs/sdk/conceptual/setup-and-start-recording" platform="android">Setup & Start Recording</Link>\n* <Link to="/docs/sdk/conceptual/when-the-recordings-appear-in-dashboard" platform="android">How are the data recorded and uploaded to be visible in the player and dashboard?</Link>\n* <Link to="/docs/sdk/conceptual/life-cycle-session-user" platform="android">Smartlook Life Cycle in the App, Session, User</Link>\n* <Link to="/docs/sdk/conceptual/what-and-how-is-recorded" platform="android">What is recorded by Smartlook, and how?</Link>\n* <Link to="/docs/sdk/conceptual/handling-sensitive-data" platform="android">Handling Sensitive Data</Link>\n* <Link to="/docs/sdk/conceptual/screen-recording-quality" platform="android">Screen Recording Quality</Link>\n* Tracking <Link to="/docs/sdk/conceptual/event-tracking" platform="android">Events</Link> and <Link to="/docs/sdk/conceptual/recording-navigation" platform="android">Navigation</Link> in the App\n* <Link to="/docs/sdk/conceptual/integrating-with-other-tools" platform="android">Smartlook integration with other tools</Link>\n'))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/sdk-installation/cordova.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-sdk-installation-cordova-mdx-f2fd2f90480b3d0a3411.js.map