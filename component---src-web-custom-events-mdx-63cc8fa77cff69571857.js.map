{"version":3,"sources":["webpack:///../src/web/custom-events.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","kind","snippets","javascript","isMDXComponent"],"mappings":"sQAOaA,G,UAAe,S,2MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAOA,QAAQ,SAAf,iBACA,YAAC,IAAD,CAAUA,QAAQ,YAAlB,iDACA,iBAAQ,CACN,GAAM,sBADR,sBAGA,qBAAG,sBAAQC,WAAW,KAAnB,iBAAH,4TACA,uFAAsE,sBAAQA,WAAW,KAAnB,cAAtE,KACA,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BC,WAAY,0EAKXJ,QAAQ,SACX,YAAC,IAAD,CAAWE,KAAK,YAAYF,QAAQ,aAApC,oNAMA,iBAAQ,CACN,GAAM,gCADR,gCAGA,gSACA,YAAC,IAAD,CAAME,KAAK,UAAUC,SAAU,CAC7BC,WAAY,kOAUXJ,QAAQ,SACX,kCAAiB,0BAAYC,WAAW,KAAvB,cAAjB,8JACA,yFACA,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BC,WAAY,uEAKXJ,QAAQ,e,yMAKfH,EAAWQ,gBAAiB","file":"component---src-web-custom-events-mdx-63cc8fa77cff69571857.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/smartlook.github.io/smartlook.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, CodeBlock, TextBlock, Link, Title, Subtitle } from \"components\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Title mdxType=\"Title\">Custom events</Title>\n    <Subtitle mdxType=\"Subtitle\">Create your own specific events for tracking.</Subtitle>\n    <h2 {...{\n      \"id\": \"what-you-can-track\"\n    }}>{`What you can track`}</h2>\n    <p><strong parentName=\"p\">{`Custom events`}</strong>{` information (custom user actions) will be displayed directly in recordings. Create your own events and we will track them for you. Events allow you to track user interactions other than clicks, page views (URL) and text inputs.  With custom events you can get creative and track pretty much everything you want.`}</p>\n    <p>{`Code you need to insert in your site has a following format in `}<strong parentName=\"p\">{`JavaScript`}</strong>{`.`}</p>\n    <Code kind=\"example\" snippets={{\n      javascript: `\n<script>\n  smartlook('track', eventName, properties);\n</script>\n`\n    }} mdxType=\"Code\" />\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nPlease note that there is a slight delay between calling the API and sending any custom event to our servers.<br/>\nIt is not recommended to call the API right before page unload or page navigation event.\n`}\n    </TextBlock>\n    <h2 {...{\n      \"id\": \"interact-with-pop-up-windows\"\n    }}>{`Interact with pop-up windows`}</h2>\n    <p>{`You can configure an event that will fire when your user sees certain pop-up windows such as promotion alerts or upsell windows. Watch recordings to understand how your users are interacting with those pop-ups and get helpful insights to better engage your users.`}</p>\n    <Code kind=\"example\" snippets={{\n      javascript: `\n<script>\n  // full example with your defined variables\n  var eventName = 'UserOpenUpsellWindow';\n  var properties = {\n    \"type\": \"SmallDiscLimit\"\n  };\n  smartlook('track', eventName, properties);\n</script>\n`\n    }} mdxType=\"Code\" />\n    <p>{`Parameter `}<inlineCode parentName=\"p\">{`properties`}</inlineCode>{` is a variable. In case you need to display only a specific information about your user there is no need to use any other parameters in your custom event.`}</p>\n    <p>{`Have a look at this example where user reached app preset limit.`}</p>\n    <Code kind=\"example\" snippets={{\n      javascript: `\n<script>\n  smartlook('track', 'UserLimitReached');\n</script>\n`\n    }} mdxType=\"Code\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}