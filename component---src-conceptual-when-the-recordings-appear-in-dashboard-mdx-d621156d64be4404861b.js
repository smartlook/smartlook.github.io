(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{l9jS:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return h}));var n=a("Fcif"),i=a("+I+c"),s=(a("mXGw"),a("/FXl")),o=a("TjRS"),r=a("+8zC"),c=(a("NRsk"),a("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/conceptual/when-the-recordings-appear-in-dashboard.mdx"}});var l={_frontmatter:c},d=o.a;function h(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(s.b)(d,Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(s.b)(r.k,{mdxType:"Title"},"When the Recordings Appear in the Dashboard?"),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"This section is concerned with the algorithms that control the recording data upload to Smartlook servers.")),Object(s.b)(r.j,{kind:"important",mdxType:"TextBlock"},"All analytics data recorded by Smartlook, be it events or screen recordings, are sent to Smartlook servers asynchronously in batches."),Object(s.b)("p",null,"Smartlook uses various techniques to acquire analytics data from the application. It stores them in an intermediate cache inside the application first, and then sends them in batches to Smartlook servers, when suitable network connection is available and the project settings and limits allow it."),Object(s.b)("h1",{id:"understanding-active-sessions"},"Understanding Active Sessions"),Object(s.b)("p",null,"In the dashboard, currently active sessions are listed in the ",Object(s.b)("strong",{parentName:"p"},"Active sessions")," tab. If the device is online, the session appears there immediately after the application starts. I can then take several minutes before the data related to the session is uploaded, processed, and available for repleay. Also, when the application is closed on the device, the active session lives for a few more minutes before the data is processed. We also wait for a short period of time to be sure the application is really suspended for good, that it was not just a short interruption of the application by an incoming call or notification. In such a case of just a short interruption, Smartlook continues with recording into the active session once the application is active again."),Object(s.b)("p",null,"Once the session is wrapped up, it moves to the ",Object(s.b)("strong",{parentName:"p"},"All visitors")," tab."),Object(s.b)("h1",{id:"data-uploading"},"Data Uploading"),Object(s.b)("p",null,"The frequency in which the data is gathered and sent depends on several factors."),Object(s.b)("p",null,"Events data are recorded almost synchronously as they happen. Then they are sent in batches every few minutes to the server."),Object(s.b)("p",null,"Video frames are gathered with the maximal frequency as configured. However, if no UI change is detected, Smartlook slows the frequency down to spare system resources. Video chunks are sent to servers in intervals that also depend on the UI changes, when suitable network connection is available. By default, video data is not sent over the network when the device is on a mobile network, and the video data waits in a cache till the application runs with an available Wi-Fi connection. This default setting can be changed in the ",Object(s.b)("a",Object(n.a)({parentName:"p"},{href:"https://application.smartlook.com/settings/projects"}),"project settings")," so that the video data too is uploaded on mobile networks."),Object(s.b)(r.j,{mdxType:"TextBlock"},'\nMore about <Link to="/docs/sdk/conceptual/screen-recording-quality/">Screen Recording Quality</Link>.\n'),Object(s.b)("h1",{id:"offline-recording"},"Offline recording"),Object(s.b)("p",null,"When the device has no network connection or no suitable network connection, the recorded data is cached. Cached data size is limited, and the cached data is sent the next time the application is running with a suitable network connection."),Object(s.b)("h2",{id:"cache-size"},"Cache Size"),Object(s.b)("p",null,"The cache size is limited by an algorithm that combines the data age, size and the overall free space in the device storage."),Object(s.b)("p",null,"Currently, the overall size of data in the Smartlook cache is limited to ",Object(s.b)("strong",{parentName:"p"},"200 MB")," or a maximum of ",Object(s.b)("strong",{parentName:"p"},"20% of the free storage space")," if it is less than 200 MB, and all data ",Object(s.b)("strong",{parentName:"p"},"older than 30 days")," are deleted regardless of the cache size."),Object(s.b)("h1",{id:"recording-limitations"},"Recording limitations"),Object(s.b)("p",null,"There are some circumstances under which SDK is not recording:"),Object(s.b)("p",null,'Parallel limit defines a given number of active sessions (a session that is being actively processed by our backend is called "active") that are allowed to be recorded at the same time. If this limit is surpassed, new recordings will NOT be recorded until the number of active sessions is no longer surpassing the prescribed limit.'),Object(s.b)("p",null,"There is a maximum number of sessions that can be recorded a month. If this limit is surpassed SDK will not record until the following month."),Object(s.b)(r.j,{kind:"important",mdxType:"TextBlock"},"Both parallel limit and number of sessions are given by the purchased package. If the app is hitting these limits, then please feel free to contact our sales team or upgrade the package."))}void 0!==h&&h&&h===Object(h)&&Object.isExtensible(h)&&!h.hasOwnProperty("__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/conceptual/when-the-recordings-appear-in-dashboard.mdx"}}),h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-conceptual-when-the-recordings-appear-in-dashboard-mdx-d621156d64be4404861b.js.map