{"version":3,"sources":["webpack:///../src/rest-api/rest-api.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","kind","snippets","bash","json","isMDXComponent"],"mappings":"sQAOaA,G,UAAe,S,2MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAOA,QAAQ,SAAf,mBACA,iQAEA,iBAAQ,CACN,GAAM,aADR,aAGA,iJACA,sBACE,kBAAIC,WAAW,MAAf,YACA,kBAAIA,WAAW,MAAf,UACA,kBAAIA,WAAW,MAAf,YAEF,iBAAQ,CACN,GAAM,iBADR,iBAGA,8FAA6E,0BAAYA,WAAW,KAAvB,+BAA7E,+CACuC,6BAAGA,WAAW,KAAQ,CACzD,KAAQ,0BAD2B,oBADvC,oJAKA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,oCAEL,yGACA,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BC,KAAM,4IAMLJ,QAAQ,SACX,kFAAiE,6BAAGC,WAAW,KAAQ,CACnF,KAAQ,6BADqD,iBAAjE,yDAGiD,0BAAYA,WAAW,KAAvB,kBAHjD,8GAG0N,0BAAYA,WAAW,KAAvB,eAH1N,yBAIA,oEAAmD,6BAAGA,WAAW,KAAQ,CACrE,KAAQ,6DADuC,qBAAnD,0DAGA,iBAAQ,CACN,GAAM,4BADR,4BAGA,gSAEsC,0BAAYA,WAAW,KAAvB,cAFtC,yCAEsI,0BAAYA,WAAW,KAAvB,UAFtI,QAEiM,0BAAYA,WAAW,KAAvB,SAFjM,yFAIA,YAAC,IAAD,CAAWC,KAAK,YAAYF,QAAQ,aAApC,qGAGA,6DAA4C,0BAAYC,WAAW,KAAvB,SAA5C,yBAAuH,0BAAYA,WAAW,KAAvB,kBAAvH,oCAAsN,0BAAYA,WAAW,KAAvB,UAAtN,uHAEuD,0BAAYA,WAAW,KAAvB,UAFvD,2EAG2C,0BAAYA,WAAW,KAAvB,UAH3C,kCAOA,8FAA6E,0BAAYA,WAAW,KAAvB,SAA7E,uEACwC,0BAAYA,WAAW,KAAvB,UADxC,+DAEA,gEACA,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BE,KAAM,2QAaLL,QAAQ,SAKX,iBAAQ,CACN,GAAM,2BADR,2BAGA,+NACA,yIAAwH,sBAAQC,WAAW,KAAnB,oBAAxH,gHACoC,sBAAQA,WAAW,KAAnB,YADpC,+OAEA,YAAC,IAAD,CAAWC,KAAK,OAAOF,QAAQ,aAA/B,uLAGA,iBAAQ,CACN,GAAM,wBADR,wBAGA,kDAAiC,sBAAQC,WAAW,KAAnB,YAAjC,2BAAyG,sBAAQA,WAAW,KAAnB,gBAAzG,2OAEiB,sBAAQA,WAAW,KAAnB,UAFjB,mQAIA,YAAC,IAAD,CAAWC,KAAK,YAAYF,QAAQ,aAApC,iRAIA,0WAEA,iBAAQ,CACN,GAAM,eADR,eAGA,wKACA,qQAGA,mGAAkF,0BAAYC,WAAW,KAAvB,mBAAlF,8F,yMAMJJ,EAAWS,gBAAiB","file":"component---src-rest-api-rest-api-mdx-6b9b93201b4167e897b5.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/smartlook.github.io/smartlook.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Title, Code, TextBlock } from \"components\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Title mdxType=\"Title\">Getting started</Title>\n    <p>{`Smartlook provides a set of useful methods to programmatically retrieve information about various resources. You can use the API to further analyze data of your visitors\nand do a deeper exploration of values collected by Smartlook.`}</p>\n    <h1 {...{\n      \"id\": \"resources\"\n    }}>{`Resources`}</h1>\n    <p>{`This API provides access to a number of resources available in the Smartlook. Currently provided ones are the following:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Visitors`}</li>\n      <li parentName=\"ul\">{`Events`}</li>\n      <li parentName=\"ul\">{`Funnels`}</li>\n    </ul>\n    <h1 {...{\n      \"id\": \"using-the-api\"\n    }}>{`Using the API`}</h1>\n    <p>{`Requests to the API are performed using the HTTP protocol to the host `}<inlineCode parentName=\"p\">{`https://api.smartlook.cloud`}</inlineCode>{`.\nTo access your project data, you have to `}<a parentName=\"p\" {...{\n        \"href\": \"#create-the-api-token\"\n      }}>{`get an API token`}</a>{` that will be sent together with your request to authenticate it.\nYour request to the API then must contain an authorization header as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`Authorization: Bearer <token>\n`}</code></pre>\n    <p>{`For example, to list the events of your project, you perform the following call:`}</p>\n    <Code kind=\"example\" snippets={{\n      bash: `\ncurl -X GET \\\\\n  https://api.smartlook.cloud/api/events \\\\\n  -H 'authorization: Bearer <token>' \\\\\n  -H 'cache-control: no-cache'\n`\n    }} mdxType=\"Code\" />\n    <p>{`The complete list of available endpoints is listed in the `}<a parentName=\"p\" {...{\n        \"href\": \"/docs/rest-api/reference\"\n      }}>{`API reference`}</a>{`.\nEach endpoint is prefixed by a version number (eg. `}<inlineCode parentName=\"p\">{`/api/v1/events`}</inlineCode>{`), however, it is not mandatory to specify the version. For the calls without version being specified (eg. `}<inlineCode parentName=\"p\">{`/api/events`}</inlineCode>{`) the latest is used.`}</p>\n    <p>{`To make things easier for you we prepared a `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.com/package/@smartlook/rest-api-client\"\n      }}>{`Javascript client`}</a>{` that can be used both in the browser and the Node.js.`}</p>\n    <h2 {...{\n      \"id\": \"traversing-paged-results\"\n    }}>{`Traversing paged results`}</h2>\n    <p>{`When making an API requests to a resource that returns multiple objects, the result will be split into multiple pages.\nAll the paginated responses are using cursor-based pagination and therefore calls to pages are stable.\nThe response of paginated results has a `}<inlineCode parentName=\"p\">{`pagination`}</inlineCode>{` property, that contains two values - `}<inlineCode parentName=\"p\">{`before`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`after`}</inlineCode>{`.\nThese values point to the beginning and the end of the returned page respectively.`}</p>\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">{`\n**Don't store cursors.** Cursors are only temporal values as they quickly may become invalid.\n`}</TextBlock>\n    <p>{`To get the link to the next page add `}<inlineCode parentName=\"p\">{`after`}</inlineCode>{` cursor to the query (`}<inlineCode parentName=\"p\">{`?after=<after>`}</inlineCode>{`) (for the previous page use the `}<inlineCode parentName=\"p\">{`before`}</inlineCode>{` the cursor).\nThere can be only one cursor in the query.\nLinks to both previous and next page can be found in the `}<inlineCode parentName=\"p\">{`_links`}</inlineCode>{` section of the response.\nTo get consistent results we recommend using `}<inlineCode parentName=\"p\">{`_links`}</inlineCode>{` for navigation between pages.`}</p>\n    {\n      /* This section may contain more useful links and it is described [here](#links-to-related-resources). */\n    }\n    <p>{`To change the number of results returned in response you may pass the `}<inlineCode parentName=\"p\">{`limit`}</inlineCode>{` parameter in the query.\nThis value will be then propagated to the `}<inlineCode parentName=\"p\">{`_links`}</inlineCode>{` in further responses or it will be set to a default value.`}</p>\n    <p>{`The response may then looks as follows:`}</p>\n    <Code kind=\"example\" snippets={{\n      json: `\n{\n    ...data,\n    \"pagination\": {\n        \"before\": \"MTaxX34=\",\n        \"after\": \"HellOW0rLD\",\n    }\n    \"_links\": {\n        \"nextPage\": \"/api/events?after=HellOW0rLD&limit=10\",\n        \"previousPage\": \"/api/events?before=MTaxX34=&limit=10\"\n    }\n}\n`\n    }} mdxType=\"Code\" />\n    {\n      /* ## Links to related resources\n      ## Handling errors */\n    }\n    <h1 {...{\n      \"id\": \"managing-the-api-tokens\"\n    }}>{`Managing the API tokens`}</h1>\n    <p>{`The Smartlook REST API uses tokens for authentication. You will need one if you are about to access the Smartlook REST API or you are integrating some of the third party applications with Smartlook.`}</p>\n    <p>{`You can manage your tokens in the settings of your project. To obtain a token, navigate in the Smartlook to your `}<strong parentName=\"p\">{`Account settings`}</strong>{`, and there select a project you want to access through the REST API.\nOn the right side, there is a section `}<strong parentName=\"p\">{`REST API`}</strong>{` where you can see the list of active tokens in your project. Next to each token, there is a time since the token was last used. Keep in mind, that when the token is inactive for more than 90 days, it will automatically become invalid.`}</p>\n    <TextBlock kind=\"note\" mdxType=\"TextBlock\">{`\nThe tokens can be managed only by the owner of the project. If you want to access the REST API of projects you were invited in, please contact the owner to give you the token.\n`}</TextBlock>\n    <h2 {...{\n      \"id\": \"create-the-api-token\"\n    }}>{`Create the API token`}</h2>\n    <p>{`In the bottom part of the `}<strong parentName=\"p\">{`REST API`}</strong>{` section lives a button `}<strong parentName=\"p\">{`Create token`}</strong>{`. After clicking the button you will be prompted to enter the token description.\nThe description comes in handy when you have multiple tokens in the project and there it should explain the purpose of the token.\nAfter clicking the `}<strong parentName=\"p\">{`Create`}</strong>{` button, you will see the token. Now you can copy it to the clipboard and close the dialog.\nWhen you close the dialog with the token, you won't be for the security reasons able to see the token again. So be sure that you have stored your token correctly.`}</p>\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">{`\n**Be careful!** Anyone with the token can access the data of your project. Please store the token securely and don't allow unauthorized entities to access it.\nIn case you might want to delete the token, you can do so in [the tokens list](#managing-the-api-tokens).\n`}</TextBlock>\n    <p>{`The token is created in the scope of a single project and therefore to be able to access multiple of your projects, you have to create a token for each of them separately.\nTo help you manage the access to your projects in a more granular manner, you may create multiple tokens per a single project where each is for a different purpose.`}</p>\n    <h1 {...{\n      \"id\": \"rate-limits\"\n    }}>{`Rate limits`}</h1>\n    <p>{`To keep our API available to as many of you as possible, we introduced rate limits to the number of requests you can make during a time window.`}</p>\n    <p>{`There is a budget for both a project and endpoints.\nEach endpoint has a price assigned and it might be higher for the endpoints that impose more stress on the system.\nThe limit is usually 500 requests per 30 minutes for each endpoint.`}</p>\n    <p>{`To get information about your usage of the Smartlook REST API you can call `}<inlineCode parentName=\"p\">{`/api/statistics`}</inlineCode>{` endpoint.\nTo extend limits for your projects please contact the Smartlook support.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}