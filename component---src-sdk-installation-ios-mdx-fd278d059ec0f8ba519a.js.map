{"version":3,"sources":["webpack:///../src/sdk-installation/ios.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","kind","snippets","ruby","swift","isMDXComponent"],"mappings":"2SAUaA,EAAe,Q,oOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAOA,QAAQ,SAAf,wBACA,kBACE,GAAM,gBADR,gBAGA,mFACA,kBACE,GAAM,2BADR,4BAGA,iDAAgC,0BAAYC,WAAW,KAAvB,sDAAhC,KACA,kBACE,GAAM,wBADR,yBAGA,mFAAkE,sBAAQA,WAAW,KAAnB,eAAlE,eAAiI,iBAAGA,WAAW,IAC3I,KAAQ,gEADqH,6BAAjI,oCAE2E,0BAAYA,WAAW,KAAvB,yBAF3E,0BAGA,kBACE,GAAM,eADR,gBAGA,6CAA4B,sBAAQA,WAAW,KAAnB,aAA5B,kEAA4I,0BAAYA,WAAW,KAAvB,WAA5I,KACA,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BC,KAAM,qBAGLJ,QAAQ,SACX,YAAC,IAAD,CAAWE,KAAK,YAAYF,QAAQ,aAApC,qKAKA,kBACE,GAAM,6BADR,6BAGA,2BAAU,sBAAQC,WAAW,KAAnB,SAAV,QAA4D,sBAAQA,WAAW,KAAnB,SAA5D,kFAAwL,0BAAYA,WAAW,KAAvB,eAAxL,YAA4P,0BAAYA,WAAW,KAAvB,sBAA5P,YACA,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BE,MAAO,2WASP,4XASCL,QAAQ,SACX,YAAC,IAAD,CAAWE,KAAK,YAAYF,QAAQ,aAApC,8MAKA,kGAAiF,iBAAGC,WAAW,IAC3F,KAAQ,8BADqE,oBAAjF,aAGA,YAAC,IAAD,CAAWC,KAAK,YAAYF,QAAQ,aAApC,0WAMA,YAAC,IAAD,CAAWE,KAAK,YAAYF,QAAQ,aAApC,6UAKA,kBACE,GAAM,sBADR,sBAGA,sCAAqB,sBAAQC,WAAW,KAAnB,WAArB,6BAA8F,sBAAQA,WAAW,KAAnB,MAA9F,KACA,kBACE,GAAM,iBADR,iBAGA,YAAC,IAAD,CAAWD,QAAQ,aAAnB,ilD,kOAqBJH,EAAWS,gBAAiB","file":"component---src-sdk-installation-ios-mdx-fd278d059ec0f8ba519a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/smartlook.github.io/smartlook.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, CodeBlock, TextBlock, Link, Title } from \"components\";\nimport { usePlatforms } from 'hooks';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Title mdxType=\"Title\">iOS SDK Installation</Title>\n    <h2 {...{\n      \"id\": \"installation\"\n    }}>{`Installation`}</h2>\n    <p>{`There are three ways to integrate Smartlook into your app:`}</p>\n    <h3 {...{\n      \"id\": \"1-swift-package-manager\"\n    }}>{`1. Swift Package Manager`}</h3>\n    <p>{`Add this Swift Package â€“ `}<inlineCode parentName=\"p\">{`https://github.com/smartlook/SmartlookSwiftPackage`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"2-direct-integration\"\n    }}>{`2. Direct integration`}</h3>\n    <p>{`Smartlook can also be added directly to the app project by `}<strong parentName=\"p\">{`downloading`}</strong>{` our latest `}<a parentName=\"p\" {...{\n        \"href\": \"https://sdk.smartlook.com/ios/smartlook-ios-sdk-1.8.6.65.zip\"\n      }}>{`Smartlook iOS SDK (1.8.6)`}</a>{`, unzipping the file, and adding `}<inlineCode parentName=\"p\">{`Smartlook.xcframework`}</inlineCode>{` to the Xcode project.`}</p>\n    <h3 {...{\n      \"id\": \"3-cocoapods\"\n    }}>{`3. Cocoapods`}</h3>\n    <p>{`In projects that use `}<strong parentName=\"p\">{`Cocoapods`}</strong>{`, Smartlook can be installed by adding the respective pod into `}<inlineCode parentName=\"p\">{`Podfile`}</inlineCode>{`:`}</p>\n    <Code kind=\"example\" snippets={{\n      ruby: `\npod Smartlook\n`\n    }} mdxType=\"Code\" />\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nPlease note that up-to-date Cocopoads version is necessary to build and run applications with Smartlook on computers with Apple Silicon (M1 and later) chips.\n`}\n    </TextBlock>\n    <h2 {...{\n      \"id\": \"setup-and-start-recording\"\n    }}>{`Setup and Start Recording`}</h2>\n    <p>{`To `}<strong parentName=\"p\">{`setup`}</strong>{` and `}<strong parentName=\"p\">{`start`}</strong>{` recording with Smartlook, Smartlook must be imported and configured, e.g., in `}<inlineCode parentName=\"p\">{`AppDelegate`}</inlineCode>{` and its `}<inlineCode parentName=\"p\">{`didFinishLaunching`}</inlineCode>{` method:`}</p>\n    <Code kind=\"example\" snippets={{\n      swift: `\nimport Smartlook\\n\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n  let smartlookConfig = Smartlook.SetupConfiguration(key: \"API_KEY\")\n  Smartlook.setupAndStartRecording(configuration: smartlookConfig)\n  // other initialization stuff\n  return true\n}\n      `,\n      'objective-c': `\n#import <Smartlook/Smartlook.h>\\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n  SLSetupConfiguration *slConfig = [[SLSetupConfiguration alloc] initWithKey:@\"API_KEY\"];\n  [Smartlook setupAndStartRecordingWithConfiguration:slConfig];\n  // other initialization stuff\n  return YES;\n}\n      `\n    }} mdxType=\"Code\" />\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nTo setup Smartlook, the **unique project API key **is needed. It can be found in the mobile project settings in the <Link to=\"https://app.smartlook.com/settings/projects\">Smartlook Dashboard</Link>.\n`}\n    </TextBlock>\n    <p>{`Smartlook now starts recording the app. The recordings will appear in the `}<a parentName=\"p\" {...{\n        \"href\": \"https://app.smartlook.com/\"\n      }}>{`Smartlook player`}</a>{` shortly.`}</p>\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nWhen starting in debug mode, your iOS app may **stop for a few seconds after this it will start and print a warning** when Smartlook is included.  \nIt is caused by **Xcode's Main Thread Checker** diagnostics. Read more about why it happens and how to handle it in this <Link to=\"/docs/sdk/cookbooks/ios-main-thread-check-warning\">Technical Note</Link>.\n`}\n    </TextBlock>\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nSDK will upload sessions **only on WiFi**. When uploading on mobile connections is requested, too, it must be enabled in the project settings in the dashboard. More details about the recording process can be found in the <Link to=\"/docs/sdk/conceptual/when-the-recordings-appear-in-dashboard\">Conceptual documentation</Link>.\n`}\n    </TextBlock>\n    <h1 {...{\n      \"id\": \"supported-versions\"\n    }}>{`Supported versions`}</h1>\n    <p>{`Currently the `}<strong parentName=\"p\">{`minimal`}</strong>{` supported iOS version is `}<strong parentName=\"p\">{`10`}</strong>{`.`}</p>\n    <h1 {...{\n      \"id\": \"further-steps\"\n    }}>{`Further Steps`}</h1>\n    <TextBlock mdxType=\"TextBlock\">{`\nAll Smartlook SDK methods are documented in the <Link to=\"/docs/sdk/api-reference\" platform=\"ios\">Smartlook API reference</Link>.\n\\n\nSome **advanced use-case** and **troubleshooting** case-studies are described in the Cookbooks section of this documentation.\n\\n\n**Issues and bugs** can be reported in the <Link to=\"https://github.com/smartlook/smartlook-mobile-issue-tracker\">issue tracker</Link>.\n\\n\n**Concepts** underlying the Smartlook functionality are described in the Conceptual documentation:\n* <Link to=\"/docs/sdk/conceptual/setup-and-start-recording\" platform=\"android\">Setup & Start Recording</Link>\n* <Link to=\"/docs/sdk/conceptual/when-the-recordings-appear-in-dashboard\" platform=\"android\">How are the data recorded and uploaded to be visible in the player and dashboard?</Link>\n* <Link to=\"/docs/sdk/conceptual/life-cycle-session-user\" platform=\"android\">Smartlook Life Cycle in the App, Session, User</Link>\n* <Link to=\"/docs/sdk/conceptual/what-and-how-is-recorded\" platform=\"android\">What is recorded by Smartlook, and how?</Link>\n* <Link to=\"/docs/sdk/conceptual/handling-sensitive-data\" platform=\"android\">Handling Sensitive Data</Link>\n* <Link to=\"/docs/sdk/conceptual/screen-recording-quality\" platform=\"android\">Screen Recording Quality</Link>\n* Tracking <Link to=\"/docs/sdk/conceptual/event-tracking\" platform=\"android\">Events</Link> and <Link to=\"/docs/sdk/conceptual/recording-navigation\" platform=\"android\">Navigation</Link> in the App\n* <Link to=\"/docs/sdk/conceptual/integrating-with-other-tools\" platform=\"android\">Smartlook integration with other tools</Link>\n`}</TextBlock>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}