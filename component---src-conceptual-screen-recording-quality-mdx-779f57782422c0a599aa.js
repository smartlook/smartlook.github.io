(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{pD2Z:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return h}));var n=a("Fcif"),i=a("+I+c"),r=(a("mXGw"),a("/FXl")),o=a("TjRS"),s=a("+8zC"),l=(a("NRsk"),a("aD51"),["components"]),c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!Object.prototype.hasOwnProperty.call(c,"__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/conceptual/screen-recording-quality.mdx"}});var d={_frontmatter:c},p=o.a;function h(e){var t=e.components,a=Object(i.a)(e,l);return Object(r.b)(p,Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)(s.l,{mdxType:"Title"},"Screen Recording Quality"),Object(r.b)("p",null,Object(r.b)("em",{parentName:"p"},"This section discusses the recording quality settings, optional tweaks, and trade-offs.")),Object(r.b)("h1",{id:"understanding-video-recording-quality"},"Understanding Video Recording Quality"),Object(r.b)("p",null,"Although everyone wants the best video quality for the application recording, setting the appropriate video quality requires careful consideration and understanding the trade-offs of different settings."),Object(r.b)("p",null,"The higher the quality, the more demanding the recording in terms of CPU load, memory footprint, energy consumption (battery life), and network traffic is."),Object(r.b)("p",null,"The primary way to set the video quality is by selecting one of the presets available in the application dashboard. Dashboard settings affect all new recordings."),Object(r.b)("h1",{id:"recording-quality"},"Recording Quality"),Object(r.b)("p",null,"There are three preset values of ",Object(r.b)("strong",{parentName:"p"},"Low/Medium/High")," (see the project ",Object(r.b)("a",{parentName:"p",href:"https://application.smartlook.com/settings/projects"},"settings"),"). Technically, this option sets primarily the video bitrate, which affects the video image quality and size of the video data. For most projects, ",Object(r.b)("strong",{parentName:"p"},"Medium")," has the best price-performance ratio. When the application is used in an environment where data size that is sent from the application matters, ",Object(r.b)("strong",{parentName:"p"},"Low")," might be the best option. For apps where the high image quality of the recordings is important, and data size does not matter much, ",Object(r.b)("strong",{parentName:"p"},"High")," can be used."),Object(r.b)("p",null,"The current settings are:"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",{parentName:"tr",align:null},"Preset"),Object(r.b)("th",{parentName:"tr",align:null},"Bitrate"),Object(r.b)("th",{parentName:"tr",align:null},"Maximum bandwidth"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Low"),Object(r.b)("td",{parentName:"tr",align:null},"80 000 bits/s"),Object(r.b)("td",{parentName:"tr",align:null},"~ 0.5 MB per minute")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"Medium"),Object(r.b)("td",{parentName:"tr",align:null},"160 000 bits/s"),Object(r.b)("td",{parentName:"tr",align:null},"~ 1 MB per minute")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",{parentName:"tr",align:null},"High"),Object(r.b)("td",{parentName:"tr",align:null},"320 000 bits/s"),Object(r.b)("td",{parentName:"tr",align:null},"~ 2 MB per minute")))),Object(r.b)("p",null,"The real data size depends on many factors (how complex the UI is, how often it changes significantly) and tends to be a fraction (½ or ⅓) of the maximum size."),Object(r.b)("p",null,"Technologically, this setting affects the memory footprint of the SDK, its CPU load, and primarily the size of the data that the SDK sends over the network."),Object(r.b)("h1",{id:"frame-rate"},"Frame rate"),Object(r.b)("p",null,"Frame rate (in frames per second, or fps) states how often Smartlook takes a snapshot of the screen. The higher the frame rate, the smoother the recording of UI changes. The trade-off is, however, higher CPU load and energy consumption. For analyzing user interaction in a common application, the default fps value (2fps) is quite sufficient. Higher fps makes sense in dynamic apps like games."),Object(r.b)("p",null,"We recommend setting the frame rate for the project on the ",Object(r.b)("a",{parentName:"p",href:"https://app.smartlook.com"},"dashboard"),"."),Object(r.b)("p",null,"Alternatively, it can also be set as one of Smartlook setup options. This is particularly useful for debugging and finding the optimal value for the application. In production releases, this option should not be used."),Object(r.b)(s.k,{mdxType:"TextBlock"},'\nThe configured frame rate, however, is its maximal value. In order to reduce the footprint, Smartlook watches the real changes in the UI and takes snapshots only when the UI is not idle. While working well in most apps, this kind of optimization, known as adaptive frame rate, may not work perfectly in some edge cases with technologies that are used to create UI. If the adaptive frame rate algorithm produces unsatisfying results, it can be switched off by the respective Smartlook setup options (see <Link to="/docs/sdk/api-reference#setup-configuration">API reference</Link>).\n'),Object(r.b)("h1",{id:"rendering-mode"},"Rendering Mode"),Object(r.b)("p",null,"On top of taking snapshots of the screens for the video recording, Smartlook can also present the UI in the form of several types of wireframe sketches."),Object(r.b)("p",null,"Different rendering modes use different amounts of CPU, memory, and produce video data of different sizes. The difference is individual for each application and depends on the way the application UI is structured. There is not always a direct relation between the simplicity of the visual presentation and resources load."),Object(r.b)(s.k,{mdxType:"TextBlock"},'\nRead more about rendering modes in the <Link to="/docs/sdk/conceptual/handling-sensitive-data#recording-modes-handling-sensitive-data-at-the-whole-screen-level">Rendering Modes: Handling Sensitive Data at the Whole Screen Level</Link>.\n'))}void 0!==h&&h&&h===Object(h)&&Object.isExtensible(h)&&!Object.prototype.hasOwnProperty.call(h,"__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/conceptual/screen-recording-quality.mdx"}}),h.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-conceptual-screen-recording-quality-mdx-779f57782422c0a599aa.js.map