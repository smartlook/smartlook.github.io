{"version":3,"sources":["webpack:///../src/web/custom-click-props.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","kind","snippets","html","json","isMDXComponent"],"mappings":"oQAOaA,G,UAAe,S,gNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAOA,QAAQ,SAAf,2BACA,YAAC,IAAD,CAAUA,QAAQ,YAAlB,kDACA,iBAAQ,CACN,GAAM,0BADR,0BAGA,4BAAW,0BAAYC,WAAW,KAAvB,8BAAX,4NACA,uCAAsB,0BAAYA,WAAW,KAAvB,8BAAtB,+CACA,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BC,KAAM,0KAOLJ,QAAQ,SACX,YAAC,IAAD,CAAWE,KAAK,YAAYF,QAAQ,aAApC,6GAKA,4KACA,YAAC,IAAD,CAAME,KAAK,UAAUC,SAAU,CAC7BE,KAAM,qFAQLL,QAAQ,e,8MAKfH,EAAWS,gBAAiB","file":"component---src-web-custom-click-props-mdx-7d5b6f4251cfd48090e0.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/smartlook.github.io/smartlook.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, CodeBlock, TextBlock, Link, Title, Subtitle } from \"components\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Title mdxType=\"Title\">Custom click properties</Title>\n    <Subtitle mdxType=\"Subtitle\">Log your own specific data for click tracking.</Subtitle>\n    <h2 {...{\n      \"id\": \"what-props-can-you-add\"\n    }}>{`What props can you add`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`data-recording-click-props`}</inlineCode>{` attribute can be added to any HTML element. When a click occurs on an element, the DOM tree is traversed from said element up to the body element and content of each of the attributes is merged into a single object.`}</p>\n    <p>{`The content of `}<inlineCode parentName=\"p\">{`data-recording-click-props`}</inlineCode>{` attribute is expected to be a JSON object.`}</p>\n    <Code kind=\"example\" snippets={{\n      html: `\n<div data-recording-click-props='{\"key1\":\"val1\",\"key2\":42,\"key3\":true}'>\n    <a data-recording-click-props='{\"key4\":\"val4\"}'>\n        Link\n    </a>\n</div>\n`\n    }} mdxType=\"Code\" />\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nPay attention on the format of the single and double quotes. Other format of quotes is not supported.\n`}\n    </TextBlock>\n    <p>{`When the link is clicked, the click properties will contain values from the attributes in addition to other values like the ones from identify API.`}</p>\n    <Code kind=\"example\" snippets={{\n      json: `\n{\n   \"key1\": \"val1\",\n   \"key2\": 42,\n   \"key3\": true,\n   \"key4\": \"val4\"\n}\n`\n    }} mdxType=\"Code\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}