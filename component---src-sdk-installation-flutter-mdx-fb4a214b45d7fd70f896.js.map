{"version":3,"sources":["webpack:///../src/sdk-installation/flutter.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","kind","snippets","yaml","dart","isMDXComponent"],"mappings":"oQAQaA,G,oBAAe,S,kNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAOA,QAAQ,SAAf,4BACA,sBACE,kBAAIC,WAAW,MAAf,kDAAuE,0BAAYA,WAAW,MAAvB,kBAEzE,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BC,KAAM,mCAILJ,QAAQ,SACX,iBAAQ,CACN,MAAS,GAET,kBAAIC,WAAW,MAAf,gFAEF,YAAC,IAAD,CAAMC,KAAK,UAAUC,SAAU,CAC7BE,KAAM,qOAWLL,QAAQ,SACX,YAAC,IAAD,CAAWE,KAAK,YAAYF,QAAQ,aAApC,0MAKA,iBAAQ,CACN,MAAS,GAET,kBAAIC,WAAW,MAAf,6EAAkG,6BAAGA,WAAW,MAAS,CACrH,KAAQ,+BADsF,oBAAlG,cAIF,YAAC,IAAD,CAAWC,KAAK,YAAYF,QAAQ,aAApC,wUAKA,iBAAQ,CACN,GAAM,sBADR,sBAGA,yFACA,iBAAQ,CACN,GAAM,iBADR,iBAGA,YAAC,IAAD,CAAWA,QAAQ,aAAnB,41D,gNAwBJH,EAAWS,gBAAiB","file":"component---src-sdk-installation-flutter-mdx-fb4a214b45d7fd70f896.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/smartlook.github.io/smartlook.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Code, CodeBlock, TextBlock, Link, Title } from \"components\";\nimport { usePlatforms } from 'hooks';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Title mdxType=\"Title\">Flutter SDK Installation</Title>\n    <ol>\n      <li parentName=\"ol\">{`Add Smartlook among other dependecies into the `}<inlineCode parentName=\"li\">{`pubspec.yaml`}</inlineCode></li>\n    </ol>\n    <Code kind=\"example\" snippets={{\n      yaml: `\ndependencies:\n  smartlook:\n`\n    }} mdxType=\"Code\" />\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">{`Setup Smartlook and start recording, e.g., in your app state initiacization`}</li>\n    </ol>\n    <Code kind=\"example\" snippets={{\n      dart: `\nimport 'package:smartlook/smartlook.dart';\\n\nclass _MyAppState extends State<MyApp> {\n\t@override\n\tvoid initState() {\n\t\tsuper.initState();\n\t\t...\n\t\tSmartlook.setupAndStartRecording('API_KEY');\n\t\t...\n\t  }\n}`\n    }} mdxType=\"Code\" />\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nTo setup Smartlook, the **unique project API key **is needed. It can be found in the mobile project settings in <Link to=\"https://app.smartlook.com/settings/projects\">Smartlook Dashboard</Link>.\n`}\n    </TextBlock>\n    <ol {...{\n      \"start\": 3\n    }}>\n      <li parentName=\"ol\">{`Smartlook now starts recording the app. The recordings will appear in the `}<a parentName=\"li\" {...{\n          \"href\": \"https://app.smartlook.com/\"\n        }}>{`Smartlook player`}</a>{` shortly.`}</li>\n    </ol>\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">\n      {`\nSDK will upload sessions **only on WiFi**. When uploading on mobile connections is requested, it must be enabled in the project settings in the dashboard. More details about the recording process can be found in the <Link to=\"/docs/sdk/conceptual/when-the-recordings-appear-in-dashboard\">Conceptual documentation</Link>.\n`}\n    </TextBlock>\n    <h1 {...{\n      \"id\": \"supported-versions\"\n    }}>{`Supported versions`}</h1>\n    <p>{`Flutter is supported on iOS 10+ and Android Jelly Bean (API 18).`}</p>\n    <h1 {...{\n      \"id\": \"further-steps\"\n    }}>{`Further Steps`}</h1>\n    <TextBlock mdxType=\"TextBlock\">{`\nAll Smartlook SDK methods are documented in the <Link to=\"/docs/sdk/api-reference\" platform=\"flutter\">Smartlook API reference</Link>.\n\\n\nSome **advanced use-case** and **troubleshooting** case-studies are described in the Cookbooks section of this documentation.\n\\n\n**Issues and bugs** can be reported in the <Link to=\"https://github.com/smartlook/smartlook-mobile-issue-tracker\">issue tracker</Link>.\n\\n\n**Concepts** undelying the Smartlook functionality are descibed in the Conceptual documentation:\n* <Link to=\"/docs/sdk/conceptual/setup-and-start-recording\" platform=\"flutter\">Setup & Start Recording</Link>\n* <Link to=\"/docs/sdk/conceptual/when-the-recordings-appear-in-dashboard\" platform=\"flutter\">How are the data recorded and uploaded to be visible in player and dashboard</Link>\n* <Link to=\"/docs/sdk/conceptual/life-cycle-session-user\" platform=\"flutter\">Smartlook Life Cycle in the App, Session, User</Link>\n* <Link to=\"/docs/sdk/conceptual/what-and-how-is-recorded\" platform=\"flutter\">What is recorded be Smartlook, and how</Link>\n* <Link to=\"/docs/sdk/conceptual/life-cycle-session-user\" platform=\"flutter\">Smartlook Life Cycle in the App, Session, User</Link>\n* <Link to=\"/docs/sdk/conceptual/handling-sensitive-data\" platform=\"flutter\">Handling Sensitive Data</Link>\n* <Link to=\"/docs/sdk/conceptual/screen-recording-quality\" platform=\"flutter\">Screen Recording Quality</Link>\n* Tracking <Link to=\"/docs/sdk/conceptual/event-tracking\" platform=\"flutter\">Events</Link> and <Link to=\"/docs/sdk/conceptual/recording-navigation\" platform=\"flutter\">Navigation</Link> in the App\n* <Link to=\"/docs/sdk/conceptual/integrating-with-other-tools\" platform=\"flutter\">Smartlook integration with other tools</Link>\n\\n\nMore info about the wrapper with additional examples can be found at [pub.dev site.](https://pub.dev/packages/smartlook#-readme-tab-)\n`}</TextBlock>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}