(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{"+sFH":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return h})),n.d(t,"default",(function(){return j}));var o=n("Fcif"),a=n("+I+c"),r=(n("mXGw"),n("/FXl")),s=n("TjRS"),i=n("+8zC"),c=n("QXkk"),b=n.n(c),l=n("kUDL"),p=n.n(l),u=(n("aD51"),["components"]),h={};void 0!==h&&h&&h===Object(h)&&Object.isExtensible(h)&&!Object.prototype.hasOwnProperty.call(h,"__filemeta")&&Object.defineProperty(h,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/webhooks/overview.mdx"}});var d={_frontmatter:h},m=s.a;function j(e){var t=e.components,n=Object(a.a)(e,u);return Object(r.b)(m,Object(o.a)({},d,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)(i.l,{mdxType:"Title"},"Overview"),"Webhooks are essential part of our API. In opposite to the REST API, that returns data upon a request, webhooks deliver data to you proactively whenever something happens in your project. Currently the webhooks can be triggered by ",Object(r.b)("a",{href:"https://updates.smartlook.com/worried-about-anomalies-in-your-events-190172"},"anomalies")," in your data.",Object(r.b)("h1",{id:"cookbook"},"Cookbook"),Object(r.b)("h3",{id:"1-set-webhook-url-on-anomalies"},"1. Set webhook URL on anomalies"),Object(r.b)("p",null,"Webhooks you can set in the ",Object(r.b)("a",{href:"https://app.smartlook.com",target:"_blank"},"Smartlook application"),". Below is screen how to set webhooks."),Object(r.b)("img",{visibleOn:"android,ios",src:p.a}),Object(r.b)("img",{visibleOn:"android,ios",src:b.a}),Object(r.b)("p",null,"Optionally you can set secret."),Object(r.b)("h3",{id:"2-set-api-on-the-server-side"},"2. Set API on the server side"),Object(r.b)("p",null,"Webhooks are sent as a JSON in a POST HTTP request to the endpoint you specified in the first step. ",Object(r.b)("br",null),"\nExample of webhook body:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n    "template": "Absolute threshold",\n    "anomalyEventName": "Errors",\n    "params": {\n        "projectName": "Smartlook Project",\n        "projectId": "1588faqebe0e421503103a97a",\n        "organizationId": "c314a9fa49ea858dfa4ebe0e",\n        "projectTimeZoneId": "Europe/Prague",\n        "eventId": "event_error",\n        "funnelId": null,\n        "direction": "up",\n        "threshold": 1,\n        "alertType": "eventThresholdAbsolute",\n        "anomaly": {\n            "date": "2021-01-01T21:59:59.999Z",\n            "eventsCount": 13,\n            "eventsCountDifference": 12\n        }\n    }\n}\n')),Object(r.b)("h1",{id:"security"},"Security"),Object(r.b)("p",null,"When your secret token is set, Smartlook uses it to create a hash signature that we attach to each payload in the header ",Object(r.b)("inlineCode",{parentName:"p"},"Smartlook-Signature-256"),"."),Object(r.b)("h3",{id:"hash-verification"},"Hash verification"),Object(r.b)("p",null,"The Hash-based message authentication codes (HMAC) uses SHA256 hashing function and is digested as a HEX string. Internally the function may looks like following:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-jsx",metastring:'title="/src/components/hmac.js"',title:'"/src/components/hmac.js"'},"const crypto = require('crypto')\n\nconst secret = SECRET_TOKEN\nconst message = request.body\n\nconst signature = crypto\n        .createHmac('sha256', secret)\n        .update(`${message}`)\n        .digest('hex')\n")))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!Object.prototype.hasOwnProperty.call(j,"__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/webhooks/overview.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-webhooks-overview-mdx-efdf24834c4561f89dc1.js.map