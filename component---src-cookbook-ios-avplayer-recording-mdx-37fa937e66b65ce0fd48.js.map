{"version":3,"sources":["webpack:///../src/cookbook/ios-avplayer-recording.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","kind","parentName","isMDXComponent"],"mappings":"iSASaA,EAAe,Q,+OAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,YAAC,IAAD,CAAOA,QAAQ,SAAf,0CACA,YAAC,IAAD,CAAWC,KAAK,YAAYD,QAAQ,aAApC,sFAGA,yDAAwC,0BAAYE,WAAW,KAAvB,iBAAxC,0BAA4H,0BAAYA,WAAW,KAAvB,8BAA5H,gCACA,kBACE,GAAM,YADR,YAGA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8BAAkD,0BAAYA,WAAW,KAAvB,YAAlD,mBAA0H,0BAAYA,WAAW,KAAvB,0BAA1H,KAAkM,8FAAlM,MAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sDAGJ,kBACE,GAAM,qBADR,qBAGA,4HAA2G,0BAAYA,WAAW,KAAvB,gBAA3G,uEAA2O,0BAAYA,WAAW,KAAvB,iBAA3O,oFACA,YAAC,IAAD,CAAWD,KAAK,OAAOD,QAAQ,aAA/B,4ZAIA,kBACE,GAAM,mBADR,mBAGA,kBACE,GAAM,kBADR,kBAGA,mCAAkB,0BAAYE,WAAW,KAAvB,8BAAlB,gDACA,qCAAoB,0BAAYA,WAAW,KAAvB,WAApB,KAA6E,0BAAYA,WAAW,KAAvB,YAA7E,yGACA,qBAAG,iBAAGA,WAAW,IACb,KAAQ,4DADT,2CAGH,kBACE,GAAM,kBADR,kBAGA,0E,6OAKJL,EAAWM,gBAAiB","file":"component---src-cookbook-ios-avplayer-recording-mdx-37fa937e66b65ce0fd48.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/smartlook.github.io/smartlook.github.io/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Title, TextBlock } from 'components';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <Title mdxType=\"Title\">iOS technical note: AVPlayer recording</Title>\n    <TextBlock kind=\"important\" mdxType=\"TextBlock\">{`\nThis guide applies to all frameworks that create or generate iOS applications.\n`}</TextBlock>\n    <p>{`Support for recording video from `}<inlineCode parentName=\"p\">{`AVPlayerLayer`}</inlineCode>{` or camera preview via `}<inlineCode parentName=\"p\">{`AVCaptureVideoPreviewLayer`}</inlineCode>{` is not currently available.`}</p>\n    <h2 {...{\n      \"id\": \"symptoms\"\n    }}>{`Symptoms`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`When user plays video with `}<inlineCode parentName=\"p\">{`AVPlayer`}</inlineCode>{` in layer or in `}<inlineCode parentName=\"p\">{`AVPlayerViewController`}</inlineCode>{`, `}<b>{`the video is not recorded and the background (video content) is black`}</b>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`All camera previews are black (without content).`}</p>\n      </li>\n    </ul>\n    <h2 {...{\n      \"id\": \"technical-reasons\"\n    }}>{`Technical reasons`}</h2>\n    <p>{`Both layers use low-level API that serves data to these layers via pixel buffers. Graphic data from `}<inlineCode parentName=\"p\">{`AVFoundation`}</inlineCode>{` are processed directly on-device GPU with hardware support, not in `}<inlineCode parentName=\"p\">{`Core Graphics`}</inlineCode>{` framework like other GUI parts. For us are these low-level layers inaccessible.`}</p>\n    <TextBlock kind=\"note\" mdxType=\"TextBlock\">{`\n\\`AVPlayer\\` recording failure is obviously an architectural problem that has not been solved by Apple for a long time. Their own \\`ReplayKit\\` framework behaves exactly the same, and Apple itself points this out in the documentation.\\n\nIn general, using the camera preview does not mean that the recording is not working. \nFor example, in \\`ARKit\\` we do not have problems because internally uses \\`MetalKit\\`. `}</TextBlock>\n    <h2 {...{\n      \"id\": \"recommendations\"\n    }}>{`Recommendations`}</h2>\n    <h3 {...{\n      \"id\": \"camera-preview\"\n    }}>{`Camera preview`}</h3>\n    <p>{`Do not use `}<inlineCode parentName=\"p\">{`AVCaptureVideoPreviewLayer`}</inlineCode>{` to render the data from the device camera. `}</p>\n    <p>{`Instead, use `}<inlineCode parentName=\"p\">{`MTKView`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`MetalKit`}</inlineCode>{`) to preview the camera. Such a solution works, and it does not seem to have any performance impacts.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://navoshta.com/metal-camera-part-1-camera-session/\"\n      }}>{`More details and sample implementation`}</a></p>\n    <h3 {...{\n      \"id\": \"video-playback\"\n    }}>{`Video playback`}</h3>\n    <p>{`We don't have any recommended solution yet.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}